{"version":3,"sources":["components/AppStyled.js","redux/contacts/contactsActions.js","components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["Container","styled","div","addContact","createAction","payload","contact","id","shortid","generate","delContact","changeFilter","Form","form","ContactForm","state","name","number","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","type","onChange","placeholder","Component","mDTP","contactsAction","connect","Div","onDeleteContact","contactsActions","contacts","items","normalizedFilter","filter","toLowerCase","includes","TransitionGroup","component","map","CSSTransition","timeout","classNames","onClick","Label","label","App","in","appear","unmountOnExit","length","createReducer","action","_","combineReducers","store","configureStore","reducer","contactsReduser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f4ba094.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .h1Title {\n    text-align: center;\n    margin-bottom: 30px;\n    font-size: 46px;\n    color: honeydew;\n  }\n\n  .h2Title {\n    margin-bottom: 30px;\n    font-size: 32px;\n    color: honeydew;\n  }\n\n  .text {\n    font-size: 18px;\n    font-style: italic;\n    color: salmon;\n  }\n\n  .h1-appear {\n    transform: translateX(-300%);\n  }\n\n  .h1-appear-active {\n    transform: translateX(0);\n    transition: transform 500ms linear;\n  }\n`;\n\nexport default Container;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\n\nconst addContact = createAction(\"contact/add\", (payload) => ({\n  payload: {\n    contact: {\n      ...payload,\n      id: shortid.generate(),\n    },\n  },\n}));\n\nconst delContact = createAction(\"contact/del\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default { addContact, delContact, changeFilter };\n","import styled from \"styled-components\";\n\nconst Form = styled.form`\n  padding: 10px;\n  margin-bottom: 50px;\n  border: 1px dotted orange;\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n    color: honeydew;\n    font-size: 22px;\n    font-weight: 700;\n  }\n\n  .input {\n    margin-top: 20px;\n    padding: 10px;\n    width: 250px;\n    height: 35px;\n    color: black;\n    font-size: 16px;\n    font-style: italic;\n  }\n\n  .submitBtn {\n    display: flex;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 10px;\n    min-width: 80px;\n    height: 25px;\n    outline: none;\n    border-radius: 4px;\n    border-bottom: solid 1px #d6d6d6;\n    background-color: honeydew;\n    color: black;\n    font-weight: 700;\n    font-size: 14px;\n\n    &:hover {\n      cursor: pointer;\n    }\n    &:active {\n      background-color: springgreen;\n    }\n  }\n`;\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport contactsAction from \"../../redux/contacts/contactsActions\";\nimport Form from \"./ContactFormStyled\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (evt) => {\n    const { name, value } = evt.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Form id=\"contact\" onSubmit={this.handleSubmit}>\n        <label className=\"label\">\n          Name\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            placeholder=\"Type to name\"\n          />\n        </label>\n\n        <label className=\"label\">\n          Phone number\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            placeholder=\"Type to phone(e.g. 111-11-11)\"\n          />\n        </label>\n\n        <button type=\"submit\" className=\"submitBtn\">\n          Add contact\n        </button>\n      </Form>\n    );\n  }\n}\n\nconst mDTP = {\n  onSubmit: contactsAction.addContact,\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mDTP)(ContactForm);\n","import styled from \"styled-components\";\n\nconst Div = styled.div`\n  .contactList__item {\n    width: 400px;\n    display: flex;\n    justify-content: space-around;\n    align-items: baseline;\n    color: springgreen;\n    font-size: 19px;\n    font-weight: 500;\n\n    &:not(:last-child) {\n      margin-bottom: 20px;\n    }\n  }\n\n  .delBtn {\n    display: flex;\n    align-items: center;\n    outline: none;\n    border-radius: 4px;\n    border-bottom: solid 1px #d6d6d6;\n    min-width: 20px;\n    height: 25px;\n    padding: 10px;\n    background-color: honeydew;\n    color: black;\n    font-weight: 500;\n    font-size: 12px;\n\n    &:hover {\n      cursor: pointer;\n    }\n    &:active {\n      background-color: salmon;\n    }\n  }\n\n  .itemFade-enter {\n    opacity: 0;\n    transform: translateX(200%);\n  }\n\n  .itemFade-enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: all 250ms linear;\n  }\n\n  .itemFade-exit {\n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  .itemFade-exit-active {\n    opacity: 0;\n    transform: translateX(-200%);\n    transition: all 250ms linear;\n  }\n`;\n\nexport default Div;\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport Div from \"./ContactListStyled\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <Div>\n      <TransitionGroup component=\"ul\">\n        {contacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} timeout={250} classNames=\"itemFade\">\n            <li className=\"contactList__item\">\n              <p>\n                {name}: {number}\n              </p>\n              <button\n                className=\"delBtn\"\n                type=\"button\"\n                onClick={() => onDeleteContact(id)}\n              >\n                Delete\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </Div>\n  );\n};\n\nconst mSTP = (state) => {\n  const { items, filter } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n\n  const visibleContacts = items.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nconst mDTP = {\n  onDeleteContact: contactsActions.delContact,\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(mSTP, mDTP)(ContactList);\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  color: honeydew;\n  font-size: 22px;\n  font-weight: 700;\n\n  .input {\n    margin-top: 20px;\n    padding: 10px;\n    width: 250px;\n    height: 35px;\n    color: black;\n    font-size: 16px;\n    font-style: italic;\n  }\n\n  .filterScale-enter {\n    opacity: 0;\n    transform: scale(0.1);\n  }\n\n  .filterScale-enter-active {\n    opacity: 1;\n    transform: scale(1);\n    transition: all 250ms linear;\n  }\n\n  .filterScale-exit {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  .filterScale-exit-active {\n    opacity: 0;\n    transform: scale(0.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport default Label;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport Label from \"./FilterStyled\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      Find contacts by name\n      <input\n        className=\"input\"\n        type=\"text\"\n        value={value}\n        onChange={(evt) => onChange(evt.currentTarget.value)}\n      />\n    </Label>\n  );\n};\n\nconst mSTP = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mDTP = {\n  onChange: contactsActions.changeFilter,\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mSTP, mDTP)(Filter);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Container from \"./AppStyled\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport { CSSTransition } from \"react-transition-group\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"h1\"\n          unmountOnExit\n        >\n          <h1 className=\"h1Title\">Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm />\n\n        <h2 className=\"h2Title\">Contacts</h2>\n\n        <Filter />\n\n        <ContactList />\n\n        {!this.props.contacts.length && (\n          <p className=\"text\">Your phonebook is empty. Please add contact.</p>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mSTP = (state) => {\n  return { contacts: state.contacts.items };\n};\n\nexport default connect(mSTP)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"./contactsActions\";\n\nconst addContact = (state, action) => {\n  return [...state, action.payload.contact];\n};\n\nconst delContact = (state, action) => {\n  return state.filter((contact) => contact.id !== action.payload);\n};\n\nconst items = createReducer([], {\n  [contactsActions.addContact]: addContact,\n  [contactsActions.delContact]: delContact,\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReduser from \"./contacts/contactsReducer\";\n\nconst store = configureStore({\n  reducer: { contacts: contactsReduser },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./base.css\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}