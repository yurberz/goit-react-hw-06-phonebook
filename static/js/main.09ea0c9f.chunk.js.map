{"version":3,"sources":["components/AppStyled.js","components/ContactForm/ContactFormStyled.js","components/Notifications/NotificationsStyled.js","components/Notifications/Notifications.js","redux/contacts/contactsActions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["Container","styled","div","Form","form","Div","Empty","ByUsed","addContact","createAction","payload","contact","id","shortid","generate","delContact","changeFilter","contactsFromLS","ContactForm","state","name","number","showEmptyNtf","showByUsedNtf","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","contacts","find","toLowerCase","trim","onSubmit","localStorage","getItem","this","JSON","parse","prevProps","setItem","stringify","className","type","onChange","placeholder","CSSTransition","in","onEntered","timeout","classNames","unmountOnExit","Component","mDTP","contactsAction","connect","items","onDeleteContact","contactsActions","normalizedFilter","filter","includes","TransitionGroup","component","map","onClick","Label","label","appear","length","createReducer","action","alert","_","combineReducers","store","configureStore","reducer","contactsReduser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09ea0c9f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .h1Title {\n    text-align: center;\n    margin-bottom: 30px;\n    font-size: 46px;\n    color: honeydew;\n  }\n\n  .h2Title {\n    margin-bottom: 30px;\n    font-size: 32px;\n    color: honeydew;\n  }\n\n  .text {\n    font-size: 18px;\n    font-style: italic;\n    color: salmon;\n  }\n\n  .h1-appear {\n    transform: translateX(-300%);\n  }\n\n  .h1-appear-active {\n    transform: translateX(0);\n    transition: transform 500ms linear;\n  }\n\n  .filterScale-enter {\n    opacity: 0;\n    transform: scale(0.1);\n  }\n  .filterScale-enter-active {\n    opacity: 1;\n    transform: scale(1);\n    transition: all 250ms linear;\n  }\n  .filterScale-exit {\n    opacity: 1;\n    transform: scale(1);\n  }\n  .filterScale-exit-active {\n    opacity: 0;\n    transform: scale(0.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport default Container;\n","import styled from \"styled-components\";\n\nconst Form = styled.form`\n  padding: 10px;\n  margin-bottom: 50px;\n  border: 1px dotted orange;\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n    color: honeydew;\n    font-size: 22px;\n    font-weight: 700;\n  }\n\n  .input {\n    margin-top: 20px;\n    padding: 10px;\n    width: 250px;\n    height: 35px;\n    color: black;\n    font-size: 16px;\n    font-style: italic;\n  }\n\n  .submitBtn {\n    display: flex;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 10px;\n    min-width: 80px;\n    height: 25px;\n    outline: none;\n    border-radius: 4px;\n    border-bottom: solid 1px #d6d6d6;\n    background-color: honeydew;\n    color: black;\n    font-weight: 700;\n    font-size: 14px;\n\n    &:hover {\n      cursor: pointer;\n    }\n    &:active {\n      background-color: springgreen;\n    }\n  }\n\n  .ntf-enter {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n  .ntf-enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: all 250ms linear;\n  }\n  .ntf-exit {\n    opacity: 1;\n    transform: translateX(0);\n  }\n  .ntf-exit-active {\n    opacity: 0;\n    transform: translateX(100%);\n    transition: all 250ms linear;\n  }\n`;\n\nexport default Form;\n","import styled from \"styled-components\";\n\nconst Div = styled.div`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  right: 3%;\n  bottom: 80%;\n  text-align: center;\n  padding: 10px;\n  min-width: 100px;\n  height: 70px;\n  background-color: orange;\n  color: black;\n`;\n\nexport default Div;\n","import Div from \"./NotificationsStyled\";\n\nexport const Empty = () => {\n  return (\n    <Div>\n      <p>Enter the contact's name and(or) phone number!</p>\n    </Div>\n  );\n};\n\nexport const ByUsed = () => {\n  return (\n    <Div>\n      <p>Is already in use!</p>\n    </Div>\n  );\n};\n","import { createAction } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\n\nconst addContact = createAction(\"contact/add\", (payload) => ({\n  payload: {\n    contact: {\n      ...payload,\n      id: shortid.generate(),\n    },\n  },\n}));\n\nconst delContact = createAction(\"contact/del\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nconst contactsFromLS = createAction(\"contacts/contactsFromLS\");\n\nexport default { addContact, delContact, changeFilter, contactsFromLS };\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\nimport Form from \"./ContactFormStyled\";\nimport { Empty, ByUsed } from \"../Notifications/Notifications\";\nimport contactsAction from \"../../redux/contacts/contactsActions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    showEmptyNtf: false,\n    showByUsedNtf: false,\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n\n    if (contacts) {\n      this.props.contactsFromLS(JSON.parse(contacts));\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { contacts } = this.props;\n\n    if (prevProps.contacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  handleChange = (evt) => {\n    const { name, value } = evt.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const { name, number } = this.state;\n\n    if (\n      this.props.contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      this.setState((state) => ({ showByUsedNtf: !state.showByUsedNtf }));\n    } else if (\n      this.props.contacts.find((contact) => contact.number === number)\n    ) {\n      this.setState((state) => ({ showByUsedNtf: !state.showByUsedNtf }));\n    } else if (name.trim() === \"\" || number.trim() === \"\") {\n      this.setState((state) => ({ showEmptyNtf: !state.showEmptyNtf }));\n    } else {\n      this.props.onSubmit({ name, number });\n    }\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number, showEmptyNtf, showByUsedNtf } = this.state;\n\n    return (\n      <>\n        <Form id=\"contact\" onSubmit={this.handleSubmit}>\n          <label className=\"label\">\n            Name\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              placeholder=\"Type to name\"\n            />\n          </label>\n\n          <label className=\"label\">\n            Phone number\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              placeholder=\"Type to phone(e.g. 111-11-11)\"\n            />\n          </label>\n\n          <button type=\"submit\" className=\"submitBtn\">\n            Add contact\n          </button>\n        </Form>\n\n        <CSSTransition\n          in={showEmptyNtf}\n          onEntered={() => this.setState({ showEmptyNtf: false })}\n          timeout={2000}\n          classNames=\"ntf\"\n          unmountOnExit\n        >\n          <Empty />\n        </CSSTransition>\n\n        <CSSTransition\n          in={showByUsedNtf}\n          onEntered={() => this.setState({ showByUsedNtf: false })}\n          timeout={2000}\n          classNames=\"ntf\"\n          unmountOnExit\n        >\n          <ByUsed />\n        </CSSTransition>\n      </>\n    );\n  }\n}\n\nconst mSTP = (state) => {\n  return { contacts: state.contacts.items };\n};\n\nconst mDTP = {\n  onSubmit: contactsAction.addContact,\n  contactsFromLS: contactsAction.contactsFromLS,\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default connect(mSTP, mDTP)(ContactForm);\n","import styled from \"styled-components\";\n\nconst Div = styled.div`\n  .contactList__item {\n    width: 400px;\n    display: flex;\n    justify-content: space-around;\n    align-items: baseline;\n    color: springgreen;\n    font-size: 19px;\n    font-weight: 500;\n\n    &:not(:last-child) {\n      margin-bottom: 20px;\n    }\n  }\n\n  .delBtn {\n    display: flex;\n    align-items: center;\n    outline: none;\n    border-radius: 4px;\n    border-bottom: solid 1px #d6d6d6;\n    min-width: 20px;\n    height: 25px;\n    padding: 10px;\n    background-color: honeydew;\n    color: black;\n    font-weight: 500;\n    font-size: 12px;\n\n    &:hover {\n      cursor: pointer;\n    }\n    &:active {\n      background-color: salmon;\n    }\n  }\n\n  .itemFade-enter {\n    opacity: 0;\n    transform: translateX(200%);\n  }\n\n  .itemFade-enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: all 250ms linear;\n  }\n\n  .itemFade-exit {\n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  .itemFade-exit-active {\n    opacity: 0;\n    transform: translateX(-200%);\n    transition: all 250ms linear;\n  }\n`;\n\nexport default Div;\n","import { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Div from \"./ContactListStyled\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <Div>\n      <TransitionGroup component=\"ul\">\n        {contacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} timeout={250} classNames=\"itemFade\">\n            <li className=\"contactList__item\">\n              <p>\n                {name}: {number}\n              </p>\n              <button\n                className=\"delBtn\"\n                type=\"button\"\n                onClick={() => onDeleteContact(id)}\n              >\n                Delete\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </Div>\n  );\n};\n\nconst mSTP = (state) => {\n  const { items, filter } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n\n  const visibleContacts = items.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nconst mDTP = {\n  onDeleteContact: contactsActions.delContact,\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(mSTP, mDTP)(ContactList);\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  color: honeydew;\n  font-size: 22px;\n  font-weight: 700;\n\n  .input {\n    margin-top: 20px;\n    padding: 10px;\n    width: 250px;\n    height: 35px;\n    color: black;\n    font-size: 16px;\n    font-style: italic;\n  }\n\n  .filterScale-enter {\n    opacity: 0;\n    transform: scale(0.1);\n  }\n\n  .filterScale-enter-active {\n    opacity: 1;\n    transform: scale(1);\n    transition: all 250ms linear;\n  }\n\n  .filterScale-exit {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  .filterScale-exit-active {\n    opacity: 0;\n    transform: scale(0.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport default Label;\n","import { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Label from \"./FilterStyled\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      Find contacts by name\n      <input\n        className=\"input\"\n        type=\"text\"\n        value={value}\n        onChange={(evt) => onChange(evt.currentTarget.value)}\n      />\n    </Label>\n  );\n};\n\nconst mSTP = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mDTP = {\n  onChange: contactsActions.changeFilter,\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mSTP, mDTP)(Filter);\n","import { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport Container from \"./AppStyled\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\n\nconst App = (state) => {\n  return (\n    <Container>\n      <CSSTransition\n        in={true}\n        appear={true}\n        timeout={500}\n        classNames=\"h1\"\n        unmountOnExit\n      >\n        <h1 className=\"h1Title\">Phonebook</h1>\n      </CSSTransition>\n\n      <ContactForm />\n\n      <h2 className=\"h2Title\">Contacts</h2>\n\n      <CSSTransition\n        in={state.contacts.length > 1}\n        classNames=\"filterScale\"\n        timeout={250}\n        unmountOnExit\n      >\n        <Filter />\n      </CSSTransition>\n\n      <ContactList />\n\n      {!state.contacts.length && (\n        <p className=\"text\">Your phonebook is empty. Please add contact.</p>\n      )}\n    </Container>\n  );\n};\n\nconst mSTP = (state) => {\n  return { contacts: state.contacts.items };\n};\n\nexport default connect(mSTP)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"./contactsActions\";\n\nconst addContact = (state, action) => {\n  if (\n    state &&\n    state.find(\n      (contact) =>\n        action.payload.contact.name.toLowerCase() === contact.name.toLowerCase()\n    )\n  ) {\n    alert(\"Is already in use!\");\n  } else if (\n    state.find((contact) => action.payload.contact.number === contact.number)\n  ) {\n    alert(\"Is already in use!\");\n  } else if (\n    action.payload.contact.name.trim() === \"\" ||\n    action.payload.contact.number.trim() === \"\"\n  ) {\n    alert(\"Enter the contact's name and(or) phone number!\");\n  } else {\n    return [...state, action.payload.contact];\n  }\n  // return [...state, action.payload.contact];\n};\n\nconst delContact = (state, action) => {\n  return state.filter((contact) => contact.id !== action.payload);\n};\n\nconst items = createReducer([], {\n  [contactsActions.addContact]: addContact,\n  [contactsActions.delContact]: delContact,\n  [contactsActions.contactsFromLS]: (_, action) => action.payload,\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReduser from \"./contacts/contactsReducer\";\n\nconst store = configureStore({\n  reducer: { contacts: contactsReduser },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./base.css\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}